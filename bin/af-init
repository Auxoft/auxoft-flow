#!/bin/sh


usage_init() {
  FLAGS_HELP=`cat << EndOfMessage
USAGE: af init [-g] [-s] [-h] [-v <version>] [-n <version_name>]
 
`
}


cmd_default() {
  DEFINE_boolean force false 'force setting of af branches, even if already configured' f
  DEFINE_string version '' 'set version to initial (a.b.c.d)' v
  DEFINE_string name '' 'set version name to initial' n

  parse_args "$@"

  if ! git rev-parse --git-dir >/dev/null 2>&1; then
    git_do init
  else
    # assure that we are not working in a repo with local changes
    git_repo_is_headless || require_clean_working_tree
  fi

  # running git flow init on an already initialized repo is fine
  if af_is_initialized && ! flag force; then
    warn "Already initialized for Auxoft Flow."
    warn "To force reinitialization, use: af init -f"
    exit 0
  fi

  mssg "add config values to git local config"

  # version
  git config --local --remove-section auxoft.core 1> /dev/null 2> /dev/null
  git config --local --add auxoft.core.version 0.0.2
  #
  # branch
  git config --local --remove-section auxoft.branch 1> /dev/null 2> /dev/null
  git config --local --add auxoft.branch.master master
  #
  # prifix
  git config --local --remove-section auxoft.prefix 1> /dev/null 2> /dev/null
  git config --local --add auxoft.prefix.feature feature/
  git config --local --add auxoft.prefix.hotfix hotfix/
  git config --local --add auxoft.prefix.release release/
  git config --local --add auxoft.prefix.nightbuild nightbuild/
  git config --local --add auxoft.prefix.sprintbuild sprintbuild/
  git config --local --add auxoft.prefix.rcbuild rcbuild/
  git config --local --add auxoft.prefix.patchbuild patchbuild/
  git config --local --add auxoft.prefix.releasebuild releasebuild/

  # git hooks
  mkdir -p ./.git/hooks 1> /dev/null 2> /dev/null

  cp -r "$(dirname $0)/githooks/" ./.git/hooks
  chmod -R +x ./.git/hooks

  af_load_version
  if [[ "$FLAGS_name" != "" ]]; then
    VERSION_NAME="$FLAGS_name"
  fi
  if [[ "$FLAGS_version" != "" ]]; then
    VERSION="$FLAGS_version"
  fi
  af_update_version $VERSION $VERSION_NAME

  mssg "done"
}


cmd_help() {
  usage
  exit 0
}
