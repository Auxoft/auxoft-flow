#!/bin/sh


init() {
  require_git_repo
  require_af_initialized
  af_load_settings
  af_load_version
}


usage() {
  echo "usage: af feature start <name>"
  echo "       af feature finish [-f]"
}


cmd_default() {
  cmd_help "$@"
}


cmd_start() {
  parse_args "$@"

  if [[ "$1" = "" ]]; then
    usage
    exit 1
  fi

  FEATURE_NAME=""
  while [[ ! "$1" = "" ]] ; do
    if [[ "$FEATURE_NAME" = "" ]] ; then
      FEATURE_NAME="$1"
    else
      name="_$1"
      FEATURE_NAME="$FEATURE_NAME$name"
    fi
    shift
  done

  FEATURE_BRANCH="$FEATURE_PREFIX$FEATURE_NAME"


  require_current_branch $MASTER_BRANCH
  require_branch_absent $FEATURE_BRANCH


  # mssg "pull from origin/$MASTER_BRANCH into $MASTER_BRANCH"

  # git_do fetch -q origin
  # git_do pull -q origin

  
  mssg "create feature branch: $FEATURE_BRANCH"

  # create branch
  git_do checkout -b "$FEATURE_BRANCH" || \
    die "Could not check out $FEATURE_BRANCH"

  
  mssg "done"
}


cmd_finish() {
  DEFINE_boolean force false 'force finish feature without check build' f
  parse_args "$@"

  FEATURE_BRANCH=`git_current_branch`


  require_clean_working_tree
  require_current_branch_prefix $FEATURE_PREFIX

  if has "$ORIGIN/$MASTER_BRANCH" $(git_remote_branches); then
    require_branches_equal "$MASTER_BRANCH" "$ORIGIN/$MASTER_BRANCH"
  fi

  if git_is_branch_merged_into "$FEATURE_BRANCH" "$MASTER_BRANCH"; then
    die "There were merge conflicts from $FEATURE_BRANCH into $MASTER_BRANCH."
  fi


  if ! flag force; then
    mssg "checking build"

    sh $AF_DIR/hooks/build-check "$VERSION_SHORT" "$VERSION_NAME" "$VERSION_TYPE" "$VERSION_LONG" || \
      die "There were check build problem."
  fi


  mssg "checkout to $MASTER_BRANCH"

  git_do checkout "$MASTER_BRANCH" || \
    die "Could not check out $MASTER_BRANCH."


  mssg "pull from origin/$MASTER_BRANCH into $MASTER_BRANCH"

  git_do fetch -q origin
  git_do pull -q origin


  mssg "checkout to $FEATURE_BRANCH"

  git_do checkout "$FEATURE_BRANCH" || \
    die "Could not check out $FEATURE_BRANCH."


  mssg "marge from $MASTER_BRANCH into $FEATURE_BRANCH"

  git_do merge --no-ff "$MASTER_BRANCH" -m "### marge from $MASTER_BRANCH into $FEATURE_BRANCH" || \
    die "There were merge conflicts."

  
  mssg "check building"

  $AF_DIR/hooks/build-check "$VERSION_SHORT" "$VERSION_NAME" "$VERSION_TYPE" "$VERSION_LONG" || \
    die "There were check build problem."


  mssg "checkout to $MASTER_BRANCH"

  git_do checkout "$MASTER_BRANCH" || \
    die "Could not check out $MASTER_BRANCH."


  mssg "marge from $FEATURE_BRANCH into $MASTER_BRANCH"

  git_do merge --no-ff "$FEATURE_BRANCH" -m "### marge from $FEATURE_BRANCH into $MASTER_BRANCH" || \
    die "There were merge conflicts."


  mssg "push $MASTER_BRANCH to origin"

  git_do push origin "$MASTER_BRANCH" || \
    die "Pushing master to origin failed. Please run finish again to retry."


  mssg "delete $FEATURE_BRANCH"

  git_do branch -d "$FEATURE_BRANCH"


  mssg "done"
}


cmd_help() {
  usage
  exit 0
}
